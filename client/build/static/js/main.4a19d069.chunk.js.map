{"version":3,"sources":["components/Form/button.js","components/Form/input.js","containers/FormContainer.js","pages/Signup.js","pages/NoMatch.js","App.js","index.js"],"names":["Button","props","console","log","style","react_default","a","createElement","onClick","action","title","Input","className","htmlFor","name","id","type","value","onChange","handleChange","placeholder","FormContainer","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","newUser","email","username","password","genderOptions","handleFormSubmit","bind","assertThisInitialized","handleClearForm","event","preventDefault","setState","_this2","target","prevState","objectSpread","defineProperty","onSubmit","input","inputType","handleInput","Form_button","Component","Signup","containers_FormContainer","NoMatch","App","react_router_dom","Nav_default","react_router","exact","path","component","Login","componen","Main","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.4a19d069.chunk.js","sourcesContent":["import React from \"react\";\n\n//title = text for the button\n//action = callback function\n//style = style objects can be passed as props\n\nconst Button = (props) => {\n    console.log(props.style);\n    return (\n        <button \n            style = {props.style}\n            onClick = {props.action}>\n            {props.title}\n        </button>\n    )\n}\n\nexport default Button;","import React from \"react\";\n\nconst Input = (props) => {\n    return (\n        <div className=\"row\">\n            <div className=\"col s12\">\n                <div className=\"input-field\">\n                    <label htmlFor={props.name} className=\"form-label\">{props.title}</label>\n                    <input \n                        className = \"form-input\"\n                        id = {props.name}\n                        name = {props.name}\n                        type = {props.type}\n                        value = {props.value}\n                        //handleChange callback updates the state and propagates through props.value\n                        onChange = {props.handleChange}\n                        placeholder = {props.placeholder}\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Input;","import React, { Component } from \"react\";\n// import \"./styles.css\";\n\n//Import Components\n// import TextArea from \"../components/TextArea\";\n// import Select from \"../components/Form/select\";\nimport Button from \"../components/Form/button\";\nimport Input from \"../components/Form/input\";\n\n\n\nclass FormContainer extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            newUser: {\n                name: \" \",\n                email: \" \",\n                username: \" \",\n                password: \" \"\n            },\n\n            genderOptions: [\"Male\", \"Female\", \"Other\", \"Prefer Not to Say\"],\n        }\n        this.handleFormSubmit = this.handleFormSubmit.bind(this);\n        this.handleClearForm = this.handleClearForm.bind(this);\n    }\n\n    handleFormSubmit(event) {\n        //makes any ajax calls to the server (?? if necessary) or axios calls to DB\n        // event.preventDefault();\n        // let userData = this.state.newUser;\n    }\n\n    handleClearForm(event) {\n        //Resetting form logic\n        event.preventDefault();\n        this.setState({\n            newUser: {\n                name: \"\",\n                email: \"\",\n                username: \"\",\n                password: \"\"\n            }\n        })\n    }\n\n    //Create a generic handler method for all <Input /> components\n        //The setState accepts either an object or an updater function with \"(prevState, props) => stateChange\"\n        //The prevState object holds the up to date value of the previous state, so we merge the updated values w/ the previous state\n\n    handleInput(event) {\n        let value = event.target.value;\n        let name = event.target.name;\n        this.setState ( prevState => {\n            return {\n                newUser : {\n                        ...prevState.newUser, [name]: value\n                    }\n            }\n        }, () => console.log(this.state.newUser))\n    }\n\n    render() {\n        return (\n            <form className=\"container\" onSubmit={this.handleFormSubmit}>\n                {/* Name Input */}\n                <Input \n                    inputType = {\"text\"}\n                    title = {\"Name\"}\n                    name = {\"name\"}\n                    value = {this.state.newUser.name}\n                    placeholder = {\"Enter your name\"}\n                    handleChange = {this.handleInput}\n                /> \n                {/* Email Input */}\n                <Input \n                    inputType = {\"text\"}\n                    title = {\"Email\"}\n                    name = {\"email\"}\n                    value = {this.state.newUser.email}\n                    placeholder = {\"Enter your email\"}\n                    handleChange = {this.handleInput}\n                /> \n                {/* Username */}\n                <Input \n                     inputType = {\"text\"}\n                     title = {\"Username\"}\n                     name = {\"username\"}\n                     value = {this.state.newUser.username}\n                     placeholder = {\"Enter your desired username\"}\n                     handleChange = {this.handleInput}\n                /> \n                {/* Password */}\n                <Input \n                    inputType = {\"text\"}\n                    title = {\"Password\"}\n                    name = {\"password\"}\n                    value = {this.state.newUser.password}\n                    placeholder = {\"Enter your desired password\"}\n                    handleChange = {this.handleInput}\n                /> \n                {/* Submit */}\n                <Button \n                    action = {this.handleFormSubmit}\n                    type = {\"primary\"}\n                    title = {\"Submit\"}\n                    // style = {buttonStyle}\n                />{\" \"}               \n            </form>\n        );\n    }\n    \n}\n\nexport default FormContainer;\n\n\n\n\n\n//FormContainer is a container component that renders all of the form elements and handles all of the business logic. \n//We call it a container component because it takes care of updating the state of the form, handling form submission, and \n//making API calls/dispatching Redux actions. The dumb components or presentational components are concerned with how things \n//look and contain the actual DOM markup. These components receive data and callbacks exclusively as props.","import React, { Component } from \"react\";\n// import \"./styles.css\";\nimport FormContainer from \"../containers/FormContainer\";\n\n\nclass Signup extends Component {\n  render() {\n    return (\n        <div className=\"container\">\n          <h3>Sign Up Form</h3>\n          <FormContainer />\n        </div>\n        )\n    }\n}\n\nexport default Signup;\n","import React from \"react\";\n\n\nfunction NoMatch() {\n  return (\n      <div className=\"container\">\n        <div className=\"card col s12\">\n            <h2>404 Page Not Found</h2>\n        </div>\n      </div>\n  );\n}\n\nexport default NoMatch;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Nav from \"./components/Nav\";\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Signup\";\nimport Main from \"./pages/Main\";\nimport NoMatch from \"./pages/NoMatch\";\n\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Nav />\n        <Switch>\n          <Route exact path=\"/\" component={Login} />\n          <Route exact path=\"/signup\" component={Signup} />\n          <Route exact path=\"/main\" componen={Main} />\n          <Route component={NoMatch} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}